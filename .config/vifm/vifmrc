" vim: filetype=vifm :

" settings {{{

" display {{{

set dotfiles

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=5

" Natural sort of (version) numbers within text.
set sortnumbers

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.
set vimhelp

" also ok for now
set statusline="%1*  %A  >  %u:%g  > %= <  %E  <  %d  "

" What should be saved automatically between vifm sessions.  Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" Not enough space on screen
set nonumber
set norelativenumber

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.
set timefmt="%H:%M:%S : %d-%m-%y"

" }}}

" interface {{{

" Show list of matches on tab completion in command-line mode
set wildmenu

" Display completions in a form of popup with descriptions of the matches
set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter
set ignorecase

" <3
set smartcase

" Don't highlight search results automatically
set nohlsearch

" Use increment searching (search while typing)
set incsearch

" neat
set mouse='a'

" make vifm more responsive I guess
set mintimeoutlen=50
set timeoutlen=100000

" }}}

" basic {{{

" Maximum number of changes that can be undone.
set undolevels=500

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.
set trash

" This is how many directories to store in the directory history.
set history=5000

" Command used to edit files in various contexts.  The default is vim.
" If you would like to use another vi clone such as Elvis or Vile
" you will need to change this setting.
set vicmd="nvim -b"

" If you would like to run an executable file when you
" press Enter, l or Right Arrow, set this.
set norunexec

set confirm-=delete

" }}}

" filesystem {{{

" Automatically resolve symbolic links on l or Enter.
set followlinks

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.
set syscalls

" Don't do too many requests to slow file systems
if !has('win')
    set slowfs=curlftpfs
endif

" }}}

" }}}

" maps {{{

" basic {{{

map <Space> <Nop>
map ; <C-w>
map ;; <C-w><C-w>

" Display sorting dialog
nnoremap s :sort<CR>
nnoremap S :invert o<CR>

nnoremap cc :rename<CR>
noremap cr :rename!<CR>
nmap g! :shell<CR>

map ZX :qa<CR>
noremap gL gr
map gm :move<CR>

" }}}

" history {{{

map K :histnext<CR>
map J :histprev<CR>

map ,gu :pushd .<CR>
map ,gg :pushd %c<CR>
map ,gU :pushd<Space>
map ,gp :popd<CR>

" }}}

" settings and splits {{{

nmap <Space>qh :set hls!<CR>

" View like in ranger
noremap <Space>qv :set millerview!<CR>

nnoremap <Space>qs :set slowfs!<cr>

map <C-w>d :vsplit .<CR>
map <C-w>D :split .<CR>

" }}}

" copying paths to system clipboard {{{

" Copying paths (copied from wiki)
if has('win')
" {{{

    " yank current directory path to Windows clipboard with forward slashes
    nnoremap ypp :!echo %"d:gs!\!/!%i| clip<cr>

    " yank current directory path to Windows clipboard with backward slashes
    nnoremap ypP :!echo %"d%i| clip<cr>

    " yank path to current file to Windows clipboard with forward slashes
    nnoremap ypf :!echo %"c:gs!\!/!%i| clip<cr>

    " yank path to current directory to Windows clipboard with backward slashes
    nnoremap ypF :!echo %"c%i| clip<cr>

    " yank current filename without path to Windows clipboard
    nnoremap ypn :!echo %"c%i| clip<cr>

    " yank root of current file's name to Windows clipboard
    nnoremap ypr :!echo %"c:r%i| clip<cr>

" }}}
elseif executable('xclip')
" {{{

    " yank current directory path into the clipboard
    nnoremap ypd :!echo -n %d | xclip -selection clipboard %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

    " yank current file path into the clipboard
    nnoremap ypf :!echo -n %c:p | xclip -selection clipboard %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>

    " yank current filename without path into the clipboard
    nnoremap ypn :!echo -n %c | xclip -selection clipboard %i<cr>:echo expand('%"c') "is yanked to clipboard"<cr>

    " yank root of current file's name into the clipboard
    nnoremap ypr :!echo -n %c:r | xclip -selection clipboard %i<cr>:echo expand('%"c:r') "is yanked to clipboard"<cr>

" }}}
elseif executable('xsel')
" {{{

    " yank current directory path into primary and selection clipboards
    nnoremap ypd :!echo -n %d | xsel --input --primary %i &&
                \ echo -n %d | xsel --clipboard --input %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

    " yank current file path into primary and selection clipboards
    nnoremap ypf :!echo -n %c:p | xsel --input --primary %i &&
                \ echo -n %c:p | xsel --clipboard --input %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>

    " yank current filename without path into primary and selection clipboards
    nnoremap ypn :!echo -n %c | xsel --input --primary %i &&
                \ echo -n %c | xsel --clipboard --input %i<cr>:echo expand('%"c') "is yanked to clipboard"<cr>

    " yank root of current file's name into primary and selection clipboards
    nnoremap ypr :!echo -n %c:r | xsel --input --primary %i &&
                \ echo -n %c:r | xsel --clipboard --input %i<cr>:echo expand('%"c:r') "is yanked to clipboard"<cr>

" }}}
elseif executable('pbcopy')
" {{{

    " yank current directory path into the clipboard
    nnoremap ypd :!echo -n %d | pbcopy %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

    " yank current file path into the clipboard
    nnoremap ypf :!echo -n %c:p | pbcopy %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>

    " yank current filename without path into the clipboard
    nnoremap ypn :!echo -n %c | pbcopy %i<cr>:echo expand('%"c') "is yanked to clipboard"<cr>

    " yank root of current file's name into the clipboard
    nnoremap ypr :!echo -n %c:r | pbcopy %i<cr>:echo expand('%"c:r') "is yanked to clipboard"<cr>

" }}}
endif

" }}}

" other {{{

" Open file in the background using its default program
map go :file<CR>
map gO :file &<CR>

" alt backspace won't work
cnoremap <M-h> <M-b><M-d>

" }}}

" }}}

let $conf = $VIFM . '/vifmrc-additional'
if filereadable($conf)
    source $conf
endif

let $localConf = $VIFM . '/vifmrc-local'
if filereadable($localConf)
    source $localConf
endif
